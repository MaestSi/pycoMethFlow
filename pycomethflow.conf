params {
	// Path to the sample description file
 	samples = "/hpcnfs/home/ieo5865/pipelines/pycomethflow/samples.txt"

	// Path to a folder where to store results
	results_dir = "/hpcnfs/scratch/temporary/pycomethflow/"

	// Path to the fasta reference
	reference = "/hpcnfs/home/ieo5865/pipelines/pycomethflow/Ecoli/GCF_000005845.2_ASM584v2_genomic.fna"
	//reference = "/hpcnfs/home/ieo5865/pipelines/pycomethflow/Ecoli/assembly.fasta"

    // Path to a gtf file
    gtf = "/hpcnfs/home/ieo5865/pipelines/pycomethflow/Ecoli/GCF_000005845.2_ASM584v2_genomic.gff"
    
    // pycoMeth parameters
    CGI_Finder_m = 0
    CGI_Finder_w = 200
    CGI_Finder_c = 0.5
    CGI_Finder_r = 0.6
    //CpG_Aggregate_d = 10
    CpG_Aggregate_d = 1
    CpG_Aggregate_l = 2
    Interval_Aggregate_n = 1000
    Interval_Aggregate_m = 5
    Interval_Aggregate_l = 2
    Meth_Comp_m = 0 
    Meth_Comp_l = 2
    Meth_Comp_pvalue_adj_method = "fdr_bh"
    Meth_Comp_pvalue_threshold = 0.01
    //Meth_Comp_only_tested_sites = "--only_tested_sites"
    Meth_Comp_only_tested_sites = ""
    Comp_Report_n = 100
    Comp_Report_d =	100000
    Comp_Report_pvalue_threshold =	0.01
    Comp_Report_min_diff_llr = 1
    Comp_Report_n_len_bin =	500
    Comp_Report_export_static_plots = "False"
    Comp_Report_report_non_significant = "False"

    // Flags to select which process to run
    alignment = true
    nanopolish = true
    pycomethCGIFinder = true
    pycomethCpGAggregate = true
    pycomethIntervalAggregate = true
    pycomethMethComp = true
    pycomethCompReport = true
}

profiles {
	singularity {
	    singularity.enabled = true
	    singularity.autoMounts = false
	    singularity.cacheDir = "/hpcnfs/home/ieo5865/pipelines/pycomethflow/singularity/"
	    process {
	    cpus = 1
	    executor = 'pbspro'
	    queue = 'workq'
	    perJobMemLimit = true
	    queueStatInterval = '1. sec'
	    pollInterval = '1. sec'
	    withName:alignment {
	    	container = 'maestsi/pycomethflow:latest'
	    	containerOptions = '--bind /hpcnfs/:/hpcnfs'
	    	cpus = { params.alignment ? 4 : 1 }
	    	memory = { params.alignment ? 30.GB + (5.GB * (task.attempt-1)) : 1.GB }
	    	errorStrategy = { task.exitStatus == 137 ? 'retry' : 'terminate' }
	    	maxRetries = 3
	    }
	    withName:nanopolish {
	    	container = 'maestsi/pycomethflow:latest'
	    	containerOptions = '--bind /hpcnfs/:/hpcnfs'
	    	cpus = { params.nanopolish ? 4 : 1 }
	    	memory = { params.nanopolish ? 30.GB + (5.GB * (task.attempt-1)) : 1.GB }
	    	errorStrategy = { task.exitStatus == 137 ? 'retry' : 'terminate' }
	    	maxRetries = 3
	    }
	    withName:pycomethCGIFinder {
	    	container = 'maestsi/pycomethflow:latest'
	    	containerOptions = '--bind /hpcnfs/:/hpcnfs'
	    	cpus = { params.pycomethCGIFinder ? 4 : 1 }
	    	memory = { params.pycomethCGIFinder ? 30.GB + (5.GB * (task.attempt-1)) : 1.GB }
	    	errorStrategy = { task.exitStatus == 137 ? 'retry' : 'terminate' }
	    	maxRetries = 3
	    }
	    withName:pycomethCpGAggregate {
	    	container = 'maestsi/pycomethflow:latest'
	    	containerOptions = '--bind /hpcnfs/:/hpcnfs'
	    	cpus = { params.pycomethCpGAggregate ? 4 : 1 }
	    	memory = { params.pycomethCpGAggregate ? 20.GB + (2.GB * (task.attempt-1)) : 1.GB }
	    	errorStrategy = { task.exitStatus == 137 ? 'retry' : 'terminate' }
	    	maxRetries = 3
	    }
	    withName:pycomethIntervalAggregate {
	    	container = 'maestsi/pycomethflow:latest'
	    	containerOptions = '--bind /hpcnfs/:/hpcnfs'
	    	cpus = { params.pycomethIntervalAggregate ? 4 : 1 }
	    	memory = { params.pycomethIntervalAggregate ? 20.GB + (5.GB * (task.attempt-1)) : 1.GB }
	    	errorStrategy = { task.exitStatus == 137 ? 'retry' : 'terminate' }
	    	maxRetries = 3
	    }
	    withName:pycomethMethComp{
	    	container = 'maestsi/pycomethflow:latest'
	    	containerOptions = '--bind /hpcnfs/:/hpcnfs'
	    	cpus = { params.pycomethMethComp ? 4 : 1 }
	    	memory = { params.pycomethMethComp ? 20.GB + (5.GB * (task.attempt-1)) : 1.GB }
	    	errorStrategy = { task.exitStatus == 137 ? 'retry' : 'terminate' }
	    	maxRetries = 3
	    }
	    withName:pycomethCompReport {
	    	container = 'maestsi/pycomethflow:latest'
	    	containerOptions = '-v /hpcnfs/:/hpcnfs'
	    	cpus = { params.pycomethCompReport ? 4 : 1 }
	    	memory = { params.pycomethCompReport ? 20.GB + (5.GB * (task.attempt-1)) : 1.GB }
	    	errorStrategy = { task.exitStatus == 137 ? 'retry' : 'terminate' }
	    	maxRetries = 3
	    }
	    }
    }
    docker {
	    docker.enabled = true
	    docker.autoMounts = false
	    docker.cacheDir = "/Users/simonemaestri/Pipelines/pycoMeth_pipeline/docker/"
	    process {
	    cpus = 1
	    executor = 'local'
	    withName:alignment {
	    	container = 'maestsi/pycomethflow:latest'
	    	containerOptions = '-v /Users/:/Users'
	    	cpus = { params.alignment ? 4 : 1 }
	    	memory = { params.alignment ? 4.GB + (5.GB * (task.attempt-1)) : 1.GB }
	    	errorStrategy = { task.exitStatus == 137 ? 'retry' : 'terminate' }
	    	maxRetries = 3
	    }
	    withName:nanopolish {
	    	container = 'maestsi/pycomethflow:latest'
	    	containerOptions = '-v //Users/:/Users'
	    	cpus = { params.nanopolish ? 4 : 1 }
	    	memory = { params.nanopolish ? 4.GB + (5.GB * (task.attempt-1)) : 1.GB }
	    	errorStrategy = { task.exitStatus == 137 ? 'retry' : 'terminate' }
	    	maxRetries = 3
	    }
	    withName:pycomethCGIFinder {
	    	container = 'maestsi/pycomethflow:latest'
	    	containerOptions = '-v /Users/:/Users'
	    	cpus = { params.pycomethCGIFinder ? 4 : 1 }
	    	memory = { params.pycomethCGIFinder ? 4.GB + (5.GB * (task.attempt-1)) : 1.GB }
	    	errorStrategy = { task.exitStatus == 137 ? 'retry' : 'terminate' }
	    	maxRetries = 3
	    }
	    withName:pycomethCpGAggregate {
	    	container = 'maestsi/pycomethflow:latest'
	    	containerOptions = '-v /Users/:/Users'
	    	cpus = { params.pycomethCpGAggregate ? 4 : 1 }
	    	memory = { params.pycomethCpGAggregate ? 4.GB + (2.GB * (task.attempt-1)) : 1.GB }
	    	errorStrategy = { task.exitStatus == 137 ? 'retry' : 'terminate' }
	    	maxRetries = 3
	    }
	    withName:pycomethIntervalAggregate {
	    	container = 'maestsi/pycomethflow:latest'
	    	containerOptions = '-v /Users/:/Users'
	    	cpus = { params.pycomethIntervalAggregate ? 4 : 1 }
	    	memory = { params.pycomethIntervalAggregate ? 4.GB + (5.GB * (task.attempt-1)) : 1.GB }
	    	errorStrategy = { task.exitStatus == 137 ? 'retry' : 'terminate' }
	    	maxRetries = 3
	    }
	    withName:pycomethMethComp{
	    	container = 'maestsi/pycomethflow:latest'
	    	containerOptions = '-v /Users/:/Users'
	    	cpus = { params.pycomethMethComp ? 4 : 1 }
	    	memory = { params.pycomethMethComp ? 4.GB + (5.GB * (task.attempt-1)) : 1.GB }
	    	errorStrategy = { task.exitStatus == 137 ? 'retry' : 'terminate' }
	    	maxRetries = 3
	    }
	    withName:pycomethCompReport {
	    	container = 'maestsi/pycomethflow:latest'
	    	containerOptions = '-v /Users/:/Users'
	    	cpus = { params.pycomethCompReport ? 4 : 1 }
	    	memory = { params.pycomethCompReport ? 4.GB + (5.GB * (task.attempt-1)) : 1.GB }
	    	errorStrategy = { task.exitStatus == 137 ? 'retry' : 'terminate' }
	    	maxRetries = 3
	    }
        }
    }    
}

tower {
	enabled = false
	endpoint = '-'
	accessToken = 'eyJ0aWQiOiA0Njg2fS5mMzczOGUwZDNmMzc4NzEyMWM1MzdkMGZiYzA5NmM3MjVmZjA1ODY1'
}
